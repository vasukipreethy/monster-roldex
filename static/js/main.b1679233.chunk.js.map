{"version":3,"sources":["Components/card/card.component.jsx","Components/card-list/card-list.component.jsx","Components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filtermonsters","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"6SAEaA,EAAO,SAAAC,GAAK,OACvB,sBAAKC,UAAU,iBAAf,UACD,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCHNC,EAAW,SAACR,GAAD,OAChB,qBAAKC,UAAU,YAAf,SACCD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAAK,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCF9CM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OACrB,uBAAOZ,UAAY,SAASa,KAAK,SAASF,YAAaA,EAAaG,SAAUF,MCgCnEG,E,kDA/Bb,aAAc,IAAD,8BACX,gBAOFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAPpC,EAAKC,MAAQ,CACXb,SAAW,GACXU,YAAa,IAJJ,E,qDAYb,WAAoB,IAAD,OACjBI,MAAM,+CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAG,EAAKT,SAAS,CAACT,SAASkB,S,oBAExC,WACE,MAAiCC,KAAKN,MAA9Bb,EAAR,EAAQA,SAAUU,EAAlB,EAAkBA,YACZU,EAAkBpB,EAASqB,QAAO,SAAA1B,GAAO,OAC5CA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBAEnD,OAAS,sBAAK9B,UAAU,MAAf,UACP,iDACA,cAAC,EAAD,CAAWW,YAAY,iBAAiBC,aAAce,KAAKf,eAC3D,cAAC,EAAD,CAAUJ,SAAYoB,EAAtB,sB,GA1BYI,IAAMC,WCQTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OAEL,cAAC,EAAD,IAEAC,SAASC,eAAe,SAM5BX,M","file":"static/js/main.b1679233.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.style.css'\r\nexport const Card = props =>\r\n (<div className=\"card-container\">\r\n <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}></img>\r\n <h2>{props.monster.name}</h2>\r\n <p>{props.monster.email}</p>\r\n </div>);\r\n\r\n","import React from 'react';\r\nimport './card-list.style.css'\r\nimport {Card} from './../card/card.component'\r\nexport const CardList = (props) => (\r\n        <div className='card-list'>\r\n        {props.monsters.map(monster => (<Card key={monster.id} monster={monster}/>))\r\n        } \r\n         </div>\r\n\r\n)","import React from 'react'\r\nimport './search-box.style.css'\r\n\r\nexport const SearchBox = ({placeholder,handleChange}) => (\r\n    <input className = \"search\" type=\"search\" placeholder={placeholder} onChange={handleChange}\r\n    />  \r\n)\r\n\r\n","import React  from 'react';\nimport './App.css';\nimport {CardList} from './Components/card-list/card-list.component.jsx'\nimport {SearchBox} from './Components/search-box/search-box.component.jsx'\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      monsters : [],\n      searchField: ''\n    }\n    \n  }\n  handleChange = (e) => {\n    this.setState({searchField:e.target.value})\n  }\n \n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users/')\n    .then(response=> response.json())\n    .then(users=> this.setState({monsters:users}))\n  }\n  render(){\n    const { monsters, searchField} = this.state;\n    const filtermonsters  = monsters.filter(monster =>\n       monster.name.toLowerCase().includes(searchField.toLowerCase())\n    )\n    return  (<div className=\"App\">\n      <h1>Monster Rolodex</h1>\n      <SearchBox placeholder=\"search monster\" handleChange={this.handleChange}></SearchBox>\n      <CardList monsters = {filtermonsters}> </CardList>\n    </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  //<React.StrictMode>\n    <App />,\n//  </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}